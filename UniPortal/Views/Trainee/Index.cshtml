@model X.PagedList.IPagedList<Day2MVC.Models.Trainee>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Trainees";
}

<!-- Page Header -->
<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-8">
    <div>
        <h1 class="text-3xl font-bold text-slate-800 dark:text-white">Trainee Management</h1>
        <p class="mt-1 text-slate-500 dark:text-slate-400">View, add, edit, or remove trainee records.</p>
    </div>
    <a asp-action="Create" class="flex items-center justify-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors shadow-lg shadow-indigo-500/30">
        <i data-lucide="user-plus" class="w-5 h-5"></i>
        <span>Add Trainee</span>
    </a>
</div>

<!-- Trainees Table Card -->
<div class="bg-white dark:bg-slate-800/50 rounded-xl shadow-md border border-slate-200 dark:border-slate-700/50 overflow-hidden">
    <div class="overflow-x-auto">
        <table class="w-full text-sm text-left">
            <thead class="text-xs text-slate-500 dark:text-slate-400 uppercase bg-slate-50 dark:bg-slate-700/50">
                <tr>
                    <th scope="col" class="px-6 py-3">Trainee</th>
                    <th scope="col" class="px-6 py-3">Department</th>
                    <th scope="col" class="px-6 py-3">Grade</th>
                    <th scope="col" class="px-6 py-3">Address</th>
                    <th scope="col" class="px-6 py-3 text-right">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trainee in Model)
                {
                    <tr class="bg-white dark:bg-slate-800/50 border-b last:border-b-0 border-slate-200 dark:border-slate-700/50 hover:bg-slate-50 dark:hover:bg-slate-700/50 transition-colors">
                        <th scope="row" class="px-6 py-4 font-medium text-slate-900 dark:text-white whitespace-nowrap">
                            <div class="flex items-center gap-4">
                                @if (!string.IsNullOrEmpty(trainee.Image))
                                {
                                    <img class="w-12 h-12 rounded-full object-cover"
                                         src="~/images/@trainee.Image"
                                         alt="@trainee.Name image"
                                         onerror="this.onerror=null; this.src='https://placehold.co/100x100/e2e8f0/64748b?text=@trainee.Name.FirstOrDefault()';">
                                }
                                else
                                {
                                    <div class="w-12 h-12 rounded-full bg-slate-200 dark:bg-slate-700 flex items-center justify-center font-bold text-slate-500">
                                        @trainee.Name.FirstOrDefault()
                                    </div>
                                }
                                <span>@trainee.Name</span>
                            </div>
                        </th>
                        <td class="px-6 py-4">
                            @if (!string.IsNullOrEmpty(trainee.Department?.Name))
                            {
                                <span class="px-2 py-1 text-xs font-medium text-purple-800 bg-purple-100 rounded-full dark:bg-purple-900/50 dark:text-purple-300">@trainee.Department.Name</span>
                            }
                            else
                            {
                                <span class="text-slate-400 italic">N/A</span>
                            }
                        </td>
                        <td class="px-6 py-4 font-medium text-slate-700 dark:text-slate-300">@trainee.Grade</td>
                        <td class="px-6 py-4 text-slate-500 dark:text-slate-400">@trainee.Address</td>
                        <td class="px-6 py-4 text-right">
                            <div class="flex items-center justify-end gap-2">
                                <a asp-action="Edit" asp-route-id="@trainee.Id" class="font-medium text-indigo-600 dark:text-indigo-400 hover:underline">Edit</a>
                                <span class="text-slate-300 dark:text-slate-600">|</span>
                                <a asp-action="Details" asp-route-id="@trainee.Id" class="font-medium text-slate-600 dark:text-slate-400 hover:underline">Details</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Pagination -->
<div class="mt-6">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    UlElementClasses = new[] { "flex", "items-center", "justify-center", "space-x-1" },
    LiElementClasses = new[] { "rounded-lg" },
    PageClasses = new[] { "block", "px-4", "py-2", "text-slate-600", "bg-white", "dark:bg-slate-800", "dark:text-slate-300", "hover:bg-indigo-50", "dark:hover:bg-slate-700", "transition-colors" },
    ActiveLiElementClass = "bg-indigo-50 dark:bg-slate-700 text-indigo-600 dark:text-white",
    LinkToPreviousPageFormat = "Previous",
    LinkToNextPageFormat = "Next",
})
</div>
