<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - UniPortal</title>

    <script src="https://cdn.tailwindcss.com"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <script src="https://unpkg.com/lucide@latest"></script>

    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background-color: #1e293b;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #475569;
            border-radius: 10px;
        }

        html.light ::-webkit-scrollbar-track {
            background-color: #f1f5f9;
        }

        html.light ::-webkit-scrollbar-thumb {
            background-color: #cbd5e1;
        }
    </style>
    <script>
        tailwind.config = { darkMode: 'class' }
    </script>
</head>
<body class="bg-slate-100 dark:bg-slate-900 text-slate-800 dark:text-slate-200">

    @{
        // Helper variables to determine the current page for active link styling
        var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
        var currentAction = ViewContext.RouteData.Values["action"]?.ToString();

        // Define CSS classes for active and inactive links to keep the HTML clean
        string activeClass = "bg-indigo-50 text-indigo-600 dark:bg-indigo-500/10 dark:text-indigo-400 font-medium";
        string inactiveClass = "text-slate-600 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-700/50 hover:text-indigo-500 dark:hover:text-white transition-colors";
    }

    <div class="flex h-screen">
        <aside id="sidebar" class="w-64 bg-white dark:bg-slate-800/50 backdrop-blur-lg border-r border-slate-200 dark:border-slate-700/50 flex-col flex transition-transform duration-300 -translate-x-full sm:translate-x-0 fixed sm:relative z-30 h-full">
            <div class="px-6 py-4 flex items-center justify-between">
                <a asp-controller="Home" asp-action="Index" class="flex items-center gap-2 text-xl font-bold text-slate-800 dark:text-white">
                    <i data-lucide="graduation-cap" class="w-7 h-7 text-indigo-500"></i>
                    <span>UniPortal</span>
                </a>
            </div>

            <nav class="flex-grow px-4">
                <ul class="space-y-2">
                    <li>
                        <a asp-controller="Home" asp-action="Index" class="flex items-center gap-3 px-4 py-2.5 rounded-lg @(currentController == "Home" ? activeClass : inactiveClass)">
                            <i data-lucide="layout-dashboard"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Instructor" asp-action="Index" class="flex items-center gap-3 px-4 py-2.5 rounded-lg @(currentController == "Instructor" ? activeClass : inactiveClass)">
                            <i data-lucide="user-check"></i>
                            <span>Instructors</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Trainee" asp-action="Index" class="flex items-center gap-3 px-4 py-2.5 rounded-lg @(currentController == "Trainee" ? activeClass : inactiveClass)">
                            <i data-lucide="users"></i>
                            <span>Trainees</span>
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Course" asp-action="Index" class="flex items-center gap-3 px-4 py-2.5 rounded-lg @(currentController == "Course" ? activeClass : inactiveClass)">
                            <i data-lucide="book-marked"></i>
                            <span>Courses</span>
                        </a>
                    </li>
                </ul>
            </nav>

            <div class="p-6">
                <div class="flex items-center justify-between p-3 rounded-lg bg-slate-100 dark:bg-slate-900/50">
                    <span class="text-sm font-medium">Theme</span>
                    <label for="theme-toggle" class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" id="theme-toggle" class="sr-only peer">
                        <div class="w-11 h-6 bg-slate-200 dark:bg-slate-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-slate-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-slate-600 peer-checked:bg-indigo-600"></div>
                    </label>
                </div>
            </div>
        </aside>

        <div id="sidebar-overlay" class="fixed inset-0 bg-black/50 z-20 sm:hidden hidden"></div>

        <div class="flex-1 flex flex-col overflow-hidden">
            <header class="bg-white/50 dark:bg-slate-800/50 backdrop-blur-lg border-b border-slate-200 dark:border-slate-700/50">
                <div class="flex items-center justify-between h-16 px-4 sm:px-6">
                    <button id="menu-toggle" class="sm:hidden p-2 rounded-md text-slate-500 hover:bg-slate-100 dark:hover:bg-slate-700">
                        <i data-lucide="menu"></i>
                    </button>
                    <div class="hidden sm:block">
                        <div class="relative">
                            <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-slate-400"></i>
                            <input type="text" placeholder="Search..." class="pl-10 pr-4 py-2 w-72 bg-slate-100 dark:bg-slate-700/50 rounded-lg border border-transparent focus:ring-2 focus:ring-indigo-500 focus:border-transparent outline-none transition">
                        </div>
                    </div>
                    <div class="flex items-center gap-4">
                        <button class="p-2 rounded-full text-slate-500 hover:bg-slate-100 dark:hover:bg-slate-700">
                            <i data-lucide="bell"></i>
                        </button>
                        <div class="relative">
                            <img src="https://placehold.co/40x40/6366f1/ffffff?text=U" alt="User Avatar" class="w-10 h-10 rounded-full cursor-pointer">
                        </div>
                    </div>
                </div>
            </header>

            <main role="main" class="flex-1 overflow-y-auto p-4 sm:p-6">
                <div class="max-w-7xl mx-auto">
                    @RenderBody()
                </div>
            </main>

            <footer class="p-4 text-center text-sm text-slate-500 dark:text-slate-400 border-t border-slate-200 dark:border-slate-700/50">
                &copy; 2025 - UniPortal - <a asp-area="" asp-controller="Home" asp-action="Privacy" class="text-indigo-500 hover:underline">Privacy</a>
            </footer>
        </div>
    </div>

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Lucide Icons
            lucide.createIcons();

            // --- Theme Toggle Logic ---
            const themeToggle = document.getElementById('theme-toggle');
            const htmlEl = document.documentElement;
            const setTheme = (theme) => {
                if (theme === 'dark') {
                    htmlEl.classList.add('dark');
                    themeToggle.checked = true;
                } else {
                    htmlEl.classList.remove('dark');
                    themeToggle.checked = false;
                }
                localStorage.setItem('theme', theme);
            };
            themeToggle.addEventListener('change', () => setTheme(themeToggle.checked ? 'dark' : 'light'));
            const storedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
            setTheme(storedTheme);


            // --- Mobile Sidebar Logic ---
            const menuToggle = document.getElementById('menu-toggle');
            const sidebar = document.getElementById('sidebar');
            const sidebarOverlay = document.getElementById('sidebar-overlay');

            const toggleSidebar = () => {
                sidebar.classList.toggle('-translate-x-full');
                sidebarOverlay.classList.toggle('hidden');
            };

            menuToggle.addEventListener('click', toggleSidebar);
            sidebarOverlay.addEventListener('click', toggleSidebar);
        });
    </script>
</body>
</html>